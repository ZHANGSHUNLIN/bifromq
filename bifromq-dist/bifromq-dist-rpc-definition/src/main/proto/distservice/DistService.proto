syntax = "proto3";
import "commontype/TopicMessage.proto";

option java_multiple_files = true;
option java_package = "com.baidu.bifromq.dist.rpc.proto";
option java_outer_classname = "DistServiceProtos";

package distservice;

service DistService {
  rpc match (MatchRequest) returns (MatchReply);
  rpc unmatch (UnmatchRequest) returns (UnmatchReply);
  rpc dist (stream DistRequest) returns (stream DistReply);
}

message MatchRequest {
  uint64 reqId = 1;
  string tenantId = 2;
  string topicFilter = 3;
  uint32 brokerId = 4;
  string receiverId = 5;
  string delivererKey = 6;
  uint64 incarnation = 7;
}

message MatchReply {
  enum Result {
    OK = 0;
    EXCEED_LIMIT = 1;
    BACK_PRESSURE_REJECTED = 2;
    ERROR = 3;
  }
  uint64 reqId = 1;
  Result result = 2;
}

message UnmatchRequest {
  uint64 reqId = 1;
  string tenantId = 2;
  string topicFilter = 3;
  uint32 brokerId = 4;
  string receiverId = 5;
  string delivererKey = 6;
  uint64 incarnation = 7;
}

message UnmatchReply {
  enum Result {
    OK = 0;
    BACK_PRESSURE_REJECTED = 1;
    ERROR = 2;
    NOT_EXISTED = 3;
  }
  uint64 reqId = 1;
  Result result = 2;
}

message DistRequest {
  uint64 reqId = 1;
  repeated commontype.PublisherMessagePack messages = 2;
}

message DistReply {
  enum Code{
    OK = 0;
    NO_MATCH = 1;
    BACK_PRESSURE_REJECTED = 2;
    ERROR = 3;
  }
  message Result{
    map<string, Code> topic = 1;
  }
  uint64 reqId = 1;
  repeated Result results = 2;
}